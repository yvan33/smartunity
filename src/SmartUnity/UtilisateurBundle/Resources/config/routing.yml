smart_unity_utilisateur_setinfos:
    pattern:  /modify_infos
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:setInfos }

smart_unity_utilisateur_editinfos:
    pattern:  /edit_infos
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:editInfos }

smart_unity_utilisateur_editavatar:
    pattern:  /upload_avatar
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:uploadavatar }

smart_unity_utilisateur_removeavatar:
    pattern:  /remove_avatar
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:removeavatar }       

smart_unity_utilisateur_changepassword:
    pattern:  /change_password
    defaults: { _controller: SmartUnityUtilisateurBundle:ChangePassword:changePassword }
    
smart_unity_utilisateur_setpref:
    pattern:  /modify_pref
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:setPref }

smart_unity_utilisateur_homepage:
    pattern:  /
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:index }

smart_unity_utilisateur_envoiparrainage:
    pattern:  /parrainage
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:envoiParrainage }
    
smart_unity_membre_profil:
    pattern:  /membre/{id}
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:profil }   


smart_unity_utilisateur_confirmparrainage:
    pattern:  /parrainage/{code}
    defaults: { _controller: SmartUnityUtilisateurBundle:Utilisateur:ConfirmParrainage, code:$code}

smart_unity_membre_questions:
    pattern:  /membre/questions/{id}/{type}/{page}
    defaults: { _controller: SmartUnityUtilisateurBundle:QuestionReponseMembre:displayListOfQuestion, type:'last', page:'1'  } 
    requirements:
        type: onFire|last|reponses|question
        page: \d+
 
smart_unity_membre_reponses:
    pattern:  /membre/reponses/{id}/{type}/{page}
    defaults: { _controller: SmartUnityUtilisateurBundle:QuestionReponseMembre:displayListOfQuestion, type:'all', page:'1'  } 
    requirements:
        type: all|certified|validated|reponses
        page: \d+

fos_user_security:
    resource: "@FOSUserBundle/Resources/config/routing/security.xml"

fos_user_profile:
    resource: "@FOSUserBundle/Resources/config/routing/profile.xml"
    prefix: /Utilisateur

fos_user_register:
    resource: "@FOSUserBundle/Resources/config/routing/registration.xml"
    prefix: /register

fos_user_resetting:
    resource: "@FOSUserBundle/Resources/config/routing/resetting.xml"
    prefix: /resetting

fos_user_change_password:
    resource: "@FOSUserBundle/Resources/config/routing/change_password.xml"
    prefix: /profil   

######################
#### AJAX ROUTING ####
######################

smart_unity_utilisateur_ajaxmembre_get_questions:
    pattern: /getQuestions/{membreId}/{type}/{page}/{nbParPage}/{route}
    defaults: { _controller: SmartUnityUtilisateurBundle:AjaxMembre:getQuestions, membreId:null, type:'reponses', page:'1', nbParPage:'3', route:null }
    requirements:
        type: onFire|last|reponses|question
        page: \d+
        nbParPage: \d+

smart_unity_utilisateur_ajaxmembre_get_reponses:
    pattern: /getQuestionsAnswered/{membreId}/{type}/{page}/{nbParPage}/{route}
    defaults: { _controller: SmartUnityUtilisateurBundle:AjaxMembre:getQuestionsAnswered, membreId:null, type:'reponses', page:'1', nbParPage:'3', route:null }
    requirements:
        type: certified|validated|reponses
        page: \d+
        nbParPage: \d+

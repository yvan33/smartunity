{% extends "SmartUnityAppBundle::layoutLog.html.twig" %}

{% block title %}Smart'Unity - Resultats de la recherche{% endblock %}

{% block stylesheets %}
<link href="{{ asset('assets/css/reponse.css') }}" rel="stylesheet" type="text/css">
<link href="{{asset('assets/css/magnificpopup.css')}}" rel="stylesheet" type="text/css">
{% endblock %}

{% block initJS %}
<script src="{{ asset('assets/js/bootstrap-paginator.js') }}"></script>
<script src="{{asset('assets/js/magnificpopup-0.9.9.min.js')}}"></script>
<script src="{{ asset('assets/js/jquery.animateAuto-1.0.0.js') }}"></script>
{% endblock %}


{% block body %}
<a ><span class="glyphicon glyphicon-chevron-left bouton-retour" onclick="javascript:history.back()"></span></a>
<div class="row row-sans-margin">
    <div class="col-md-12" style="padding:0px;">


        <div class="grille-content-2">
            <div class="grille-reponse">
                <div class="bouton-signaler">
                    <a href="{% if is_granted('ROLE_USER') %}{{path('smart_unity_question_reponse_signaler_question', {slug: question.slug})}}{% else %}#{% endif %}"><img src="{{ asset('assets/img/signaler.png') }}"/></a>
                </div>                
                <div class="head-blue"><p style="float:left">{{ question.sujet }}</p>
                    {% if app.user==question.membre.username and not is_validated %} <a href="{{path('smart_unity_question_reponse_edit_question', {slug: question.slug})}}"><span class="glyphicon glyphicon-pencil"></span></a> {% endif %}
                    <p style="float:right">{{ question.date|date('d-m-Y H:i:s') }}</p>
                </div>

                <div class="grille-1">
                    <div class="rond-point"><p>{{ question.remuneration }} pts</p></div>

{% if not is_certif and not is_validated %}
                    <div class="grille-soutient"><p style="margin:0px">{{ question.soutienMembres|length }} soutien {% if question.soutienMembres|length > 1 %}s{% endif %}</p>
                        <button type="button" class="bouton-soutien" {% if not is_granted('ROLE_USER') %} rel="tooltip" data-original-title="Vous devez être connecté pour soutenir une question."{% endif %}><span class="glyphicon glyphicon-plus-sign" style="font-size:24px"></span></button>
                    </div>
                    {% endif %}
                </div>

                <div class="grille-2">

                    <div class="grille-3-over">
                        <div class="grille-3">

                            <div class="grille-3-grey">
                                <div class="grille-3-im">

                                            {% if avatar %}
                                    <a href="{{ path('smart_unity_membre_profil', {id: membre_id}) }}"><img src="{{ asset('') }}{{ avatar }}" alt="avatar" height="80" width="80" /></a>
                                            {% else %}
                                    <a href="{{ path('smart_unity_membre_profil', {id: membre_id}) }}"> <img src="{{ asset('uploads/documents/logo.png') }}" height="80" width="80" /></a>
                                            {% endif %}

                                </div>
                                <div class=" grille-3-txt">
                                    <p style="margin:0px; font-weight:600"><a href="{{ path('smart_unity_membre_profil', {id: membre_id}) }}">{{ question.membre.username }}</a></p>
                                    <p style="margin:0px">{{smart_reponses}} Smart'Reponses</p>
                                    <p style="margin:0px">{{nb_questions_membre}} Questions</p>
                                    <p style="margin:0px">{{question.membre.cagnotte}} Smart'Points</p>
                                    <img class="etoile" src="{{ asset('assets/img/etoile.png') }}"/>
                                    <p class="reputation" style="margin:0px; display:inline;">{{question.membre.reputation}}</p>
                                </div>
                            </div>


                        </div>
                    </div>
                    <p class="min">{{ question.description }}</p>
                    <div style="float:left;margin-bottom:10px;" >
                              {% if question.marque.nom is defined %}<span class="label label-default">{{question.marque.nom}}</span>{% endif %}
                              {% if question.modele.nom is defined %}<span class="label label-default">{{question.modele.nom}}</span>{% endif %}
                              {% if question.os.nom is defined %}<span class="label label-default">{{question.os.nom}}</span>{% endif %}
                              {% if question.typeQuestion.nom is defined %}<span class="label label-default">{{question.typeQuestion.nom}}</span>{% endif %}
                    </div>


                              {% for commentaire in question.commentaireQuestions %}
                                {% if commentaire.signaler == 0 %}
                    <div class="commentaire">
                        <p style="float:left">{{commentaire.description}}</p><p style="float:right">
                            <a href="{{ path('smart_unity_membre_profil', {id: commentaire.membre.id}) }}">{{commentaire.membre.username}}</a> le {{commentaire.date|date('d-m-Y H:i')}}
                            <a href="{% if is_granted('ROLE_USER') %}{{path('smart_unity_question_reponse_signaler_commentaire_question', {idCommentaireQuestion: commentaire.id})}}{% else %}#{% endif %}" style="display: inline-block"><img src="{{ asset('assets/img/signaler.png') }}"/></a>
                        </p>
                    </div>
                                {% endif %}
                              {% endfor %}

                    <div class="bloc-commenter-repondre">
                        <div class="grille-3-btn">

                            <form action="{{path('smart_unity_question_reponse_add_commentaire_question', {slug: question.slug})}}" method="POST">
                                <div  id="commentaire-input-question" class="commentaire-input" >{{ form_widget(formCommentaireQuestion.description, {'attr': {'class': 'form-control forminfo','style': 'resize: none' }} )}}
                                    <span class="croix-close" onClick="closeCommentQuestion(this)"> &#10006;</span>
                                </div>
                                <input type="submit" value="Envoyer" id="bouton-com-envoyer-question" class="bouton-com-rep-input" style="margin-left:10px"/>
                         {{  form_rest(formCommentaireQuestion) }}
                            </form>

                            <a id="bouton-commenter-question" href="">
                                <div  class="bouton-com-rep" style="margin-left:10px"  {% if not is_granted('ROLE_USER') %} rel="tooltip" data-original-title="Vous devez être connecté pour commenter une question."{% endif %}>Commenter</div>
                            </a>

        {% if not is_validated and not is_certif and not is_answered %}

                            <a class="reponse" href="{% if is_granted('ROLE_USER') %}{{ path('smart_unity_question_reponse_add_reponse',{ 'slug': slug })}}{% else %}#{% endif %}">
                                <div class="bouton-com-rep" {% if not is_granted('ROLE_USER') %} rel="tooltip" data-original-title="Vous devez être connecté pour répondre à une question."{% endif %} >Répondre</div>
                            </a>                        
                           
        {% endif %}

                        </div>
                    </div>
                </div>
            </div>

                          {% for reponse in listeReponses %}
                              {% if loop.index == 1 %}

            <div id="form-commenter-reponse">
                <form action="{{path('smart_unity_question_reponse_add_commentaire_reponse', { slug: question.slug, idReponse: reponse.id})}}" method="POST">
                    <div  id="commentaire-input-reponse"class="commentaire-input" style="display:block;">{{ form_widget(formCommentaireReponse.description, {'attr': {'class': 'form-control forminfo', 'style': 'resize: none'}} )}}
                        <span class="croix-close" onClick="closeCommentReponse(this)"> &#10006;</span>
                    </div>
                    <input type="submit" value="Envoyer" id="bouton-com-envoyer-reponse" class="bouton-com-rep-input commentaire-btn" style="margin-left:10px"/>
                         {{  form_rest(formCommentaireReponse) }}
                </form>
            </div>
                            {% if reponse.is_validated or reponse.is_certif %}
                                    {% include "SmartUnityQuestionReponseBundle:Include:ReponseBlock.html.twig" %}

                            {% if nbReponses > 1 %}{% include "SmartUnityQuestionReponseBundle:Include:ReponseDivider.html.twig" %}{% endif %}

                            {% else %}
                                    {% include "SmartUnityQuestionReponseBundle:Include:ReponseDivider.html.twig" %}
                                    {% include "SmartUnityQuestionReponseBundle:Include:ReponseBlock.html.twig" %}
                                {% endif %}
                              {% else %}
                                {% include "SmartUnityQuestionReponseBundle:Include:ReponseBlock.html.twig" %}
                              {% endif %}
                          {% endfor %}
        </div>
    </div>
</div>


<div class="row">
    <div style="text-align:center; cursor:pointer">
        <ul id="pages" class="pagination pagination-lg"  style="margin-bottom:30px">
                      {% for page in pagination %}
            <li {% if page[2]=='0' %}class="active"{% endif %}><a href="{{ path('smart_unity_question_reponse_display_reponse', {page: page[1], slug: slug, tri: tri}) }}">{{ page[0] }}</a></li>
                      {% endfor %}
        </ul>
    </div>
</div>

{#/////////////////////////////////////////////////
Toast
///////////////////////////////////////////////////#}

{% if haveAddedAnswer == 1 %}
<div class="toast"> Votre réponse a bien été ajoutée </div>
 {% endif%}

{% if haveEditedQuestion == 1 %}
<div class="toast"> Votre réponse a bien été modifiée </div>
 {% endif%}


</div>
</div>
{% endblock %}


{% block modal %}
{% if is_granted('ROLE_USER') %}

{#/////////////////////////////////////////////////#}
{#Blocs en display : none#}
{#///////////////////////////////////////////////////#}

<div id="addReponseHolder">
    <div class="container"  style="padding-left: 0; padding-right: 0;">
        <div class="row">
            <div class="col-md-offset-1 col-md-10" style="padding-left:0px; padding-right:0px; position:relative">
                <div class="container cadre-form-reponse">
                    <div class="row">
                        <div class="col-md-12">
                            <div  style="position:absolute;cursor:pointer;right:4px;top:5px;color:#FFF;font-size:20px" id="closeFrame">
                                <span class="glyphicon glyphicon-remove-circle"></span>
                            </div>
{#                <iframe id="addReponse" style="border:0px;width:100%;background:none;height:184px;" src="about:blank"></iframe>#}
                            <div class="grille-content">

                                <form action="{{path('smart_unity_question_reponse_add_reponse', {slug: question.slug})}}" method="POST">
                                    <div class="erreur">
            {{ form_errors(formReponse) }}
                                    </div>
                                    <div class="row">
                                        <div class="head-blue">Formuler une réponse</div>
                                    </div>
                                    <div class="row row-avec-margin">
	        {{ form_errors(formReponse.description) }}{{ form_widget(formReponse.description,{'attr': {'class': 'form-control forminfo reponse-input'}}) }}</div>
                                    	    {{form_widget(formReponse._token)}}
                                    <div class="row">
                                        <div class="cent-h">{{form_widget(formReponse.valider,{'attr': {'class': 'bouton-com-rep-input'}})}}</div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>     
            </div>
        </div>
    </div>
</div>



{% endif %}
{% endblock %}
{% block callJS %}


<script>

////////////
/// VOTES
////////////


////////Hover sur les fleches
    function upVoteHover(e) {
        var cheminFlechePlusVerte = '{{ asset('assets/img/')}}';
        $(e).children().attr('src', cheminFlechePlusVerte + 'fleche_plus.png');
        $(e).children().next().css('color', '#85c53a');
    }

    function upVoteUnhover(e) {
        var cheminFlechePlusGrise = '{{ asset('assets/img/')}}';
        $(e).children().attr('src', cheminFlechePlusGrise + 'fleche_plus_grise.png');
        $(e).children().next().css('color', '#7e7e7e');
    }

    function downVoteHover(e) {
        var cheminFlecheMoinsRouge = '{{ asset('assets/img/')}}';
        $(e).children().attr('src', cheminFlecheMoinsRouge + 'fleche_moins.png');
        $(e).children().next().css('color', '#d42434');
    }

    function downVoteUnhover(e) {
        var cheminFlecheMoinsGrise = '{{ asset('assets/img/')}}';
        $(e).children().attr('src', cheminFlecheMoinsGrise + 'fleche_moins_grise.png');
        $(e).children().next().css('color', '#7e7e7e');
    }


////////////Ajax
    function upVote(pId) {

        $.getJSON('{{ path('smart_unity_question_reponse_ajax_upvote') }}/' + pId, function(donnees) {
            if (donnees['status'] == 'ok') {
                score = parseInt($('#vote' + pId + ' .upVote p').html());
                $('#vote' + pId + ' .upVote p').html(score + 1);
                $('#vote' + pId).attr('rel', "tooltip");
                $('#vote' + pId).attr('data-original-title', "Vous venez de noter cette question.");
                $('#vote' + pId + ' .upVote').attr('onclick', '');
                $('#vote' + pId + ' .downVote').attr('onclick', '');
                $('.roww').tooltip({
                    'placement': 'right'
                });
            } else if (donnees['status'] == 'error') {

                $.magnificPopup.open({
                    items: {
                        src: '<div class="white-popup">' + donnees['error_msg'] + '</div>',
                        type: 'inline',
                        mainClass: 'mfp-fade'
                    }
                });
            }
        });
    }

    function downVote(pId) {

        $.getJSON('{{ path('smart_unity_question_reponse_ajax_downvote') }}/' + pId, function(donnees) {
            if (donnees['status'] == 'ok') {
                score = parseInt($('#vote' + pId + ' .downVote p').html());
                $('#vote' + pId + ' .downVote p').html(score - 1);
                $('#vote' + pId).attr('rel', "tooltip");
                $('#vote' + pId).attr('data-original-title', "Vous venez de noter cette question.");
                $('#vote' + pId + ' .upVote').attr('onclick', '');
                $('#vote' + pId + ' .downVote').attr('onclick', '');
                $('.roww').tooltip({
                    'placement': 'right'
                });
            } else if (donnees['status'] == 'error') {

                $.magnificPopup.open({
                    items: {
                        src: '<div class="white-popup">' + donnees['error_msg'] + '</div>',
                        type: 'inline',
                        mainClass: 'mfp-fade'
                    }
                });
            }
        });
    }


//////////
/// OnClick Events
//////////

// Bouton répondre
    $('a.reponse').click(function(e) {
        e.preventDefault();
    {% if is_granted('ROLE_USER') %}
        $('#addReponse').attr('src', $(this).attr('href'));
        $('#addReponseHolder').show('fast');
        $('.espace-vide-pour-cadre-repondre').show();
    {% endif %}

    });

    $('#closeFrame').click(function() {
        $('#addReponseHolder').hide('fast');
        $('#addReponse').attr('src', 'about:blank');
        $('.espace-vide-pour-cadre-repondre').hide();

    })

////////////////////////////
///////////hover signaler commenter
////////////////////////////

    function displaySignal(e) {
        console.log(
                $(e).children());
    }


////////////////////////////
///////////Commenter question
////////////////////////////
    $('#bouton-commenter-question').click(function(e) {
        e.preventDefault();
    {% if is_granted('ROLE_USER') %}
        $(this).prev().children([0]).show();
        $(this).children([0]).hide();
        $(this).prev().children([1]).show();
    {% endif %}
    });


    function closeCommentQuestion(e) {
        $(e).parent().hide();
        $(e).parent().next([0]).hide();
        $(e).parent().parent().next().children().show();
    }

////////////////////////////
/////////Commenter réponse
////////////////////////////

    function displayCommentFormReponse(e, reponseId) {

        {% if is_granted('ROLE_USER') %}

        //fermeture de l'ancien form
{#        $('#form-commenter-reponse').parent().next().show();#}
        //Efface formulaire et bouton envoyer


        //Modification de l'attribut 'action' du form pour faire correspondre à la réponse
        var actionUrl = $('#form-commenter-reponse').children().get(0).getAttribute('action');
        $('#form-commenter-reponse').children().get(0).setAttribute('action', actionUrl.replace(/\d+$/, reponseId));

        //Déplacement du form pour le mettre sous la réponse correspondante.
        $(e).parent().prev().append($('#form-commenter-reponse'));
        $('#form-commenter-reponse').show();
        $(e).parent().prev().show();
        $(e).parent().hide();
    {% endif %}
    }

    function closeCommentReponse(e) {
        //Affichage bouton commenter
        $(e).parent().parent().parent().parent().next().show();

        //Efface formulaire et bouton envoyer
        $(e).parent().parent().parent().hide();
    }


//////////
/// TOOLTIPS & TOAST
//////////

    $(document).ready(function() {

        $('.roww').tooltip({
            'placement': 'right'
        });

        $('.toast').css('opacity', '0');

  {% if not is_granted('ROLE_USER') %}
        $('.reponse').tooltip({
            'placement': 'bottom'
        });
        $('.bouton-com-rep').tooltip({
            'placement': 'bottom'
        });
        $('.bouton-soutien').tooltip({
            'placement': 'right'
        });

  {% else %}
        $('.bouton-soutien').popover({
            'html': true,
            'content': '<div id="addSoutienHolder"> \
        <div class="grille-content"> \
            <legend class="legend-soutenir">Soutenir la question</legend> \
                {{ form_start(formSoutien)}} \
                <div class="erreur"> \
            {{ form_errors(formSoutien) }} \
            </div> \
        <div class="row row-soutenir"> \
  <div class="grille-1 grille-1-soutenir"> Augmenter dotation: </div> \
                   <div class="grille-2 grille-2-soutenir">{{ form_errors(formSoutien.soutien) }}{{ form_widget(formSoutien.soutien,{'attr': {'style': 'width: 100%', 'class': 'form-control'}}) }}</div> \
</div> \
        <div class="row row-soutenir"> \
                <div class="cent-h">{{form_widget(formSoutien.soutenir,{'attr': {'class': 'bouton-soutenir'}})}}</div> \
            </div> \
            {{form_end(formSoutien)}} \
        </div> \
</div>',
            'placement': 'right',
            'animation': true
        });
  {% endif %}

    });

////////////////////////////
////////// PAGINATION & AJAX
////////////////////////////

//Options du bootStrap Paginator
    options = new Object();
    options = {
        currentPage: {{ page }},
        totalPages: {{ nbPages }},
        alignment: 'center',
        numberOfPages: 5,
        size: 'large',
        itemContainerClass: function(type, page, current) {
            return (page === current) ? "active" : "pointer-cursor";
        },
        bootstrapMajorVersion: 3,
        onPageClicked: function(pEvent, pOriginalEvent, pType, pPage) {
            clickOnPagination(pPage);
        }
    };
    tri = '{{ tri }}';
    $(document).ready(function() {
        $('#pages').bootstrapPaginator(options);
        $('#triVote').attr('href', '#');
        $('#triDate').attr('href', '#');
        $('#triVote').click(function(e) {
            tri = 'vote';
            options.currentPage = 1;
            $('#pages').bootstrapPaginator(options);
            $('#triVote').css('font-weight', 'bold');
            $('#triVote').css('font-style', 'none');
            $('#triDate').css('font-weight', 'normal');
            clickOnPagination(1);
            e.preventDefault();
        });
        $('#triDate').click(function(e) {
            tri = 'date';
            options.currentPage = 1;
            $('#pages').bootstrapPaginator(options);
            $('#triVote').css('font-weight', 'normal');
            $('#triDate').css('font-weight', 'bold');
            $('#triDate').css('font-style', 'none');
            clickOnPagination(1);
            e.preventDefault();
        });
    });
    function clickOnPagination(pPage) {
        $('#reponses-frame').height(function(i, h) {
            return h;
        });

        $('#form-commenter-reponse').hide();
        $('#reponses-frame').before($('#form-commenter-reponse'));
        $('#reponses-container').fadeOut('fast');

        //On récupère le JSON depuis le controller AjaxController
        $.getJSON('{{ path('smart_unity_question_reponse_ajax_get_reponses', {slug: slug}) }}/' + tri + '/' + pPage + '/{{nbParPage}}', function(donnees) {
            var content = '';
            if (donnees[0]['page'] == pPage && donnees[0]['slug'] == '{{slug}}' && donnees[0]['nbParPage'] == {{nbParPage}} && donnees[0]['tri'] == tri) {
                donnees.shift(); //On supprime la ligne de check du JSON

                donnees.forEach(function(pEntry, i) {
                    if (!pEntry['is_validated'] && !pEntry['is_certif'])
                        content += generateContent(pEntry, i);
                }); //Generation du code

                //Affichage du nouveau contenu dasn le tab, et fadeIn
                $('#reponses-container').html(content);
                $('#reponses-container').fadeIn('fast');
                $('#reponses-frame').animateAuto('height', 'fast');
            } else { //Si la première ligne de check du JSON n'est pas conforme à ce qui à été demandé
                $('#reponses-container').html('<div class="alert alert-danger">Erreur de communication avec le serveur</div>');
                $('#reponses-container').fadeIn('fast');
            }
            $('.roww').tooltip({
                'placement': 'right'
            });
        });
    }
    function generateContent(pEntry, i) {

        var route_vers_profil = '{{ path("smart_unity_membre_profil", {'id' : 'membre_id' }) }}';
        route_vers_profil = route_vers_profil.replace("membre_id", pEntry['membre_id']);
        var entity = '<div style="position:relative;"> \
    <div class="grille-reponse"> \
                <div class = "bouton-signaler"> \
            <a href = "#"> <img src = "{{ asset('assets/img/signaler.png') }}"/></a> \
            </div>';

          {% if  is_granted('ROLE_ADMIN') %}
        entity += '          <div class="dropdown bouton-admin"> \
        <a href="#" class="dropdown-toggle" data-toggle="dropdown">Administration<b class="caret"></b></a> \
        <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu">';

        if (!(pEntry['is_certif']) && pEntry['is_validated']) {

            entity += ' <li><a href="' + Routing.generate('smart_unity_question_reponse_certification', {idReponse: pEntry['id']}) + '" tabindex="-1">Certifier réponse</a></li>';
        }
        entity += '      <li><a tabindex="-1" href="#">Another action</a></li> \
            <li><a tabindex="-1" href="#">Something else here</a></li> \
            <li class="divider"></li> \
            <li><a tabindex="-1" href="#">Separated link</a></li> \
        </ul> \
    </div> \
    <div class="reponse-id"> Id: ' + pEntry['id'] + '</div>';

        {% endif %}
        entity += '                        <div class="grille-1" style="text-align:center"> \
                                    <div class="roww" id="vote' + pEntry['id'] + '" style="display:inline-block" rel="tooltip" data-original-title="{% if not is_granted('ROLE_USER') %}Vous devez être connecté pour noter une réponse.{% endif %}';
        if (pEntry['is_voted']) {
            entity += 'Vous avez déjà noté cette question.';
        }

        entity += '"> \
                                      <div class="fleche upVote" onmouseover="upVoteHover(this);" onmouseout="upVoteUnhover(this);" {% if is_granted('ROLE_USER') %}';
        if (!pEntry['is_voted'])
            entity += 'onClick="javascript:upVote(' + pEntry['id'] + ')"';
        entity += ' {% endif %}> \
                                          <img src="{{ asset('assets/img/fleche_plus_grise.png') }}" /><p>' + pEntry['up_vote'] + '</p> \
                                        </div> \
                                        <div class="fleche downVote"  onmouseover="downVoteHover(this);" onmouseout="downVoteUnhover(this);" {% if is_granted('ROLE_USER') %}';
        if (!pEntry['is_voted'])
            entity += 'onClick="javascript:downVote(' + pEntry['id'] + ')"';
        entity += '{% endif %}> \
                                          <img src="{{ asset('assets/img/fleche_moins_grise.png') }}"/><p>' + pEntry['down_vote'] + '</p> \
                                        </div> \
                                    </div> \
                                    <div class="roww"> \
                                      <p style="font-size:11px">' + pEntry['date'] + '</p> \
                                    </div>';
        if (pEntry['is_validated'] || pEntry['is_certif'])
            entity += ' \
                                    <div class="roww"> \
                                      <img src="{{ asset('assets/img/certif.png') }}" style="margin-top:10px"/> \
                                    </div>';
        entity += ' \
                                </div> \
                                 \
                                <div class="grille-2" > \
                          \
                                  <div class="grille-3-over"> \
                                    <div class="grille-3"> \
                              \
                                        <div class="grille-3-grey"> \
                                            <div class="grille-3-im">';

        if (pEntry['avatar'])
            entity += ' \
 <img src="{{ asset('') }}' + pEntry['avatar'] + ' " alt="avatar" height="80" width="80" />';
        else
            entity += '\
                                             <img src="{{ asset('uploads/documents/logo.png') }}" height="80" width="80" />';
        entity += '      </div> \
                                            <div class=" grille-3-txt"> \
                                              <p style="margin:0px; font-weight:600"><a href="' + route_vers_profil + '">' + pEntry['membre_username'] + '</a></p> \
                                            <p style="margin:0px">' + pEntry['smart_reponses'] + ' Smart\'Reponses</p> \
                                            <p style="margin:0px">' + pEntry['nb_questions_membre'] + ' Questions</p> \
                                            <p style="margin:0px">' + pEntry['points_membre'] + ' Smart\'Points</p> \
                                            <img class="etoile" src="{{ asset('assets/img/etoile.png') }}"/> \
                                                                                        <p class="reputation" style="margin:0px; display:inline;">{{question.membre.reputation}}</p> \
                                            </div> \
                                        </div> \
                                </div> \
                                </div> \
                                <p style="min-height: 100px">' + pEntry['description'] + '</p>';
        pEntry['commentaires'].forEach(function(pCom, i) {

            entity += '<div class="commentaire" onmouseover="displaySignal()"> \
                                    <p style="float:left">' + pCom['description'] + '</p><p style="float:right">' + pCom['membre_username'] + ' le ' + pCom['date'] + ' \
                                    <a href="#"><img class="signaler-comment" src="{{ asset('assets/img/signaler.png') }}"/></a></p> \
                                    </div>';
        });

        entity += '        <div style="float:right"> \
                                    <div class="grille-3-btn">';
               {% if not is_validated and is_granted('ROLE_USER') and app.user.id == question.membre.id %}
       entity += '<div style = "float:left; margin-right:5px;"> \
            <a href = "'+ Routing.generate('smart_unity_question_reponse_validation_reponse', {idReponse: pEntry['id']}) + '"><img src="{{ asset('assets/img/valid-btn.png') }}"/></a></div>';    
                             {% endif %}
          entity += '      <div></div> \
         <div><div class="commentaire-btn-reponse bouton-com-rep"  onClick="javascript:displayCommentFormReponse(this,' + pEntry['id'] + ')" style="margin-left:10px"  {% if not is_granted('ROLE_USER') %} rel="tooltip" data-original-title="Vous devez être connecté pour commenter une question."{% endif %}>Commenter</div></div> \
            </div> \
            </div> \
            </div> \
            </div> \
            </div>';

        return entity;
    }
</script>

{% endblock %}